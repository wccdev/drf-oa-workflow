[tool]
[tool.poetry]
name = "drf-oa-workflow"
version = "0.4.9"
homepage = "https://github.com/wccdev/drf-oa-workflow"
description = "Skeleton project created by Cookiecutter PyPackage."
authors = ["Leslie CHan <ampedee@gmail.com>"]
readme = "README.md"
license =  "MIT"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "drf_oa_workflow" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.group.dev.dependencies]
black = "^23.12.1"
pre-commit = {version = "^2.12.0", optional = true}
pytest = "^7.4.4"
isort  = { version = "^5.8.0", optional = true}
flake8  = { version = "^3.9.2", optional = true}
flake8-docstrings = { version = "^1.6.0", optional = true }

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
pip  = { version = "^20.3.1", optional = true}
pycryptodome = "^3.19.0"
requests = "^2.31.0"
django = ">=3.2"
djangorestframework = "^3.14.0"
cx-oracle = "^8.3.0"
oracledb = "^1.4.2"

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
    ]

dev = ["tox", "pre-commit", "virtualenv", "pip", "twine", "toml", "bump2version"]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs"
    ]

[tool.poetry.scripts]
wccoaworkflow = 'drf_oa_workflow.cli:main'

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
